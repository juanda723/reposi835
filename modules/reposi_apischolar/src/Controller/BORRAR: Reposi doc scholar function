
$form['body'] = array();
// http://cse.bth.se/~fer/googlescholar.php?user=Z9vU8awAAAAJ
        $config = \Drupal::config('system.maintenance');
	$apikey_query_start = $config->get('query_scholar_start');
	$apikey_query_final = $config->get('query_scholar_final');
		$search_author_state = db_select('reposi_state', 's');
		$search_author_state->fields('s', array('s_uid'))
		                    ->condition('s.s_type', 'Active', '=');
		$id_author_active = $search_author_state->execute();
		$author_full_name = array();
		foreach ($id_author_active as $author_active) {
		    $search_author_idscholar = db_select('reposi_user', 'p');
		    $search_author_idscholar->fields('p', array('uid', 'u_first_name', 'u_second_name', 'u_first_lastname',
		                   			  'u_second_lastname', 'u_id_scholar'))
						            ->condition('p.uid', $author_active->s_uid, '=')
						            ->orderBy('u_first_lastname', 'ASC');
						       $pager=$search_author_idscholar->extend('Drupal\Core\Database\Query\PagerSelectExtender')->limit(10);
		    $author_info[] = $pager->execute()->fetchAssoc();
	    }
	    $eid_doc_scholar = array();
	    $form['body'] = array();
	    $num_articles = 0;
		$num_books = 0;
		$num_book_chaps = 0;
	    foreach ($author_info as $id_scholar) {
		    $title_doc_scholar = array();
		    $pre_date_scholar = array();
		    $date_scholar = array();
		    $pre_type_scholar = array();
		    $type_doc_scholar = array();
		    $num_articles = 0;
		    $num_books = 0;
		    $num_book_chaps = 0;
	    	if ($id_scholar['u_id_scholar']==!NULL) {
	    		$author_id = $id_scholar['u_id_scholar'];
			

	    		$search_doc = 'http://localhost/googlescholar-api/gspublication.php?user='.'Z9vU8awAAAAJ';
////////////
			$client = \Drupal::httpClient();
			$response = $client->get($search_doc, ['timeout' => 600]);
			$data = $response->getBody();
			$scholar_publication = explode('{', $data);
			//$scholar_title = explode('{', $data);
			$data_number = count($scholar_publication);

			//$jsonData = json_encode($_POST);    
			/*$headers = ['Content-Type' => 'application/json'];
    			$response = $client->request('POST', $search_doc, ['timeout' => 600, 'headers'=>$headers,'body' => 						$jsonData]);
			//  $response = $client->request('GET', '/delay/5', ['timeout' => 3.14]);
    			$data = $response->getBody();
			//$decoded = Json::decode($data);
    			$scholar_user = explode('{', $data);
    			$scholar_data = explode('"name": "', $data);
			$data_number = count($scholar_data);
			$scholar_info = explode('",',$data);
			$header = array(t('Google Scholar ID'), t('Name'), t('Affiliation'));*/
		//	drupal_set_message('*****************SCHOLAR:'.print_r($scholar_publication,true));

//$link_scholar = \Drupal::l($scholar_id_user, Url::fromRoute('reposi.reposi_apischolar.scholar_assoc', ['node'=>$authors_name['uid'], 'nod'=>$scholar_id_user]));
			for($i=2; $i<$data_number; $i++){
	//		drupal_set_message($scholar_publication[$i]);
                       echo $i.'**********************************'.print_r($scholar_publication[$i],true);
			$scholar_doc = explode('",', $scholar_publication[$i]);
			$scholar_doc_title1 = explode('"title": "', $scholar_doc[0]);
			$scholar_doc_authors = explode('"authors": "', $scholar_doc[1]);
		//	$scholar_doc_citations = explode('"citations":', $scholar_doc[3]);
			$scholar_doc_year = explode('"year": ', $scholar_doc[3]);


/*
  "title": "RB Repository: Reference bibliographies repository for Drupal 7",
    "authors": "FO Collazos, BEH Hurtado, ER Pineda",
    "venue": "Sistemas &amp; TelemÃ¡tica 14 (38), 47-62, 2016 ",
    "citations": ,
    "year": "2016 ",
    "idpub":
*/
		
			$scholar_doc_title = $scholar_doc_title1[1];
			$scholar_doc_authors = $scholar_doc_authors[1];
			$scholar_doc_year = $scholar_doc_year[1];
 drupal_set_message('*****************SCHOLAR:'.print_r($scholar_doc_year,true));
			$scholar_doc_year = substr($scholar_doc_year,-50,4);
/*			$link_publication_scholar = \Drupal::l($scholar_doc_title, Url::fromRoute('reposi.reposi_apischolar.scholar_assoc', ['user'=>$author_id, 'pid'=>$scholar_id_user]));*/
                        $form['doc'][$i] = array('#markup' => '<br><strong>'.$scholar_doc_title.'</strong>, '.$scholar_doc_authors.', <strong>'.		$scholar_doc_year.'</strong></br>');
//                    if.................................
			$form['title'][$i] = array('#value' => $scholar_doc_title);
			$form['authors'][$i] = array('#value' => $scholar_doc_authors);
			$form['year'][$i] = array('#value' => $scholar_doc_year);

			$google_scholar_information = array('title'=>$scholar_doc_title,'authors'=>$scholar_doc_authors,'year'=>$scholar_doc_year);
			$form['scholar_information'][$i] = array('#value' => $google_scholar_information);
	//		drupal_set_message('$scholar_doc_title: '.$form['scholar_information'][$i]['#value']['title']);
	//		drupal_set_message('$scholar_doc_title: '.$scholar_doc_title);

/*			$search_pub = db_select('reposi_publication', 'p');
			$search_pub->fields('p');
			$find_pub = $search_pub->execute();
	    		foreach ($form['title'] as $title_docs) {
                                $title_doc_scholar[] = $title_docs['#value'];
	    //			drupal_set_message('<br>$scholar_doc_title: '.$title_docs['#value'].'</br>');
	    		}
	    		foreach ($form['authors'] as $authors_docs) {
				$authors_doc_scholar[] = $authors_docs['#value'];
	    //			drupal_set_message('<br>$scholar_doc_title: '.$authors_docs['#value'].'</br>');
	    		}
	    		foreach ($form['year'] as $year_docs) {
				$year_doc_scholar[] = $year_docs['#value'];
	    		//	drupal_set_message('year '.$year_docs['#value'].'</br>');
	    		}
	    		foreach ($form['scholar_information'] as $scholar_information) {
				$gs_scholar_information[] = $scholar_information['#value'];
	    		 	drupal_set_message('year '.print_r($gs_scholar_information,true).'</br>');
	    		}*/
			$search_pub = db_select('reposi_publication', 'p');
			$search_pub->fields('p');
			$find_pub = $search_pub->execute();
			$cuenta=count($find_pub);
				$count_pub=0;
			foreach ($find_pub as $pub) {
				$count_pub++;
			}
			drupal_set_message('cuentaaAA:'.$count_pub);
			if($count_pub>0)
			{
		        foreach ($find_pub as $list_p) {
     	                $pub_title = $list_p->p_title;
			$pub_year = $list_p->p_year;
			$pub_id = $list_p->pid;
			$database_information  = array("title_database"=>$pub_title, "year_database"=>$pub_year);
			$form['database_information'] = array('#value' => $database_information);   
//			drupal_set_message('titulo scholar: '.print_r($form['database_information'],true).'el i'); 
                        	if(($pub_title==$form['scholar_information'][$i]['#value']['title'] && $pub_year==$form['scholar_information'][$i]['#value']['year'])){
                         	drupal_set_message('PUBLICAIÓN IGUAL añoIGUAL AÑO BASE DE DATOS:'.$pub_title. 'VS año gs:'.$scholar_doc_year. 'id:'.$pub_id);
                        $form['doc'][$i] = array('#markup' => '<br><strong>'.$scholar_doc_title.'</strong>, '.$scholar_doc_authors.', <strong>'.		$scholar_doc_year.'</strong></br>');

				}
				else{
				drupal_set_message('PUBLICAIÓN diferentes:'.$scholar_doc_title.$scholar_doc_year);
                        	$form['doc'][$i] = array('#markup' => '<br><strong>'.$scholar_doc_title.'</strong>, '.$scholar_doc_authors.', <strong>'.		$scholar_doc_year.'</strong></br>');
				}
			}


			}
			else{
			drupal_set_message('no hay publicaiones en la base de datos');
			$mezcla =array_combine($form['title'][$i], $form['year'][$i]);
			
	    		/*foreach ($mezcla  as $title => $year) {
			db_insert('reposi_publication')->fields(array(
					'p_type'       => 'Undefined',
					'p_title'      => $title,
					'p_year'       => $year,
					'p_check'      => 0,
					'p_source'     => t('Google Scholar'),
			))->execute();
			//$scholar_title = explode('||||',$scholar_information);
                        echo $i . '  '. ' TITULO:'.$title. ' AÑO:'.$year. '   ';
			drupal_set_message(' TITULO:'.$title. ' AÑO:'.$year);
			}*/
	    		foreach ($form['title'][$i]  as $scholar_information) {
		/*	db_insert('reposi_publication')->fields(array(
					'p_type'       => 'Undefined',
					'p_title'      => $scholar_information,
					'p_year'       => 5555,
					'p_check'      => 0,
					'p_source'     => t('Google Scholar'),
			))->execute();*/
			//$scholar_title = explode('||||',$scholar_information);
                        

			}
			}
         //               drupal_set_message('DATABASE: '.print_r($database_information,true). ' scholar:'.print_r($google_scholar_information,true));
	//		array_combine($google_scholar_information, $database_information);

		/*	foreach (array_combine($scholar_information, $find_pub) as $scholar_information => $list_p){
			}

		/*	for($i=0; $i<count($title_doc_scholar); $i++){
			$google_scholar_information = array("title"=>$title_doc_scholar[$i],"authors"=>$authors_doc_scholar[$i],"year"=>$year_doc_scholar[$i]);
			drupal_set_message('$scholar_doc_title: '.print_r($google_scholar_information,true));
			}*/
///////////////////////// C I E R R A    E L 	F O R //////////////////////////////////////////
			}
///////////////////////////////////////////////////////////////////////////////////////////////
			$search_pub = db_select('reposi_publication', 'p');
			$search_pub->fields('p');
			$find_pub = $search_pub->execute();
			$cuenta=count($find_pub);
				$count_pub=0;
			foreach ($find_pub as $pub) {
				$count_pub++;
			}
			drupal_set_message('cuentaaAA:'.$count_pub);
			if($count_pub>0)
			{
			}
			else{
	    		foreach ($form['scholar_information'] as $scholar_information) {
				/*db_insert('reposi_publication')->fields(array(
					'p_type'       => 'Undefined',
					'p_title'      => $scholar_information['#value']['title'],
					'p_year'       => $scholar_information['#value']['year'],
					'p_check'      => 0,
					'p_source'     => t('Google Scholar'),
				))->execute();*/
			//	echo print_r($scholar_information['#value'],true);
	    		 	drupal_set_message('year '.print_r($scholar_information['#value'],true).'</br>');
	    		}
			}
}}
////////////////////
	    	/*	$get_info_docs = file_get_contents($search_doc);
	    		$num_docs = explode('totalResults":"', $get_info_docs);
	    		$number_docs = explode('","opensearch:startIndex', $num_docs[1]);
	    		$search_eid = explode('"eid":"', $get_info_docs);
	    		$flag_intro = -1;
	    		foreach ($search_eid as $eids) {
	    			$flag_intro++;
	    			if ($flag_intro > 0) {
	    				$eid_doc_scopus[] = explode('","dc:title":"', $eids);
	    			}
	    		}
	    		foreach ($eid_doc_scopus as $title_docs) {
	    			$title_doc_scopus[] = explode('","dc:creator":"', $title_docs[1]);
	    		}
	    		foreach ($title_doc_scopus as $this_date) {
	    			$pre_date_scopus[] = explode('prism:coverDate":"', $this_date[1]);
	    		}
	    		foreach ($pre_date_scopus as $dates) {
	    			$date_scopus[] = explode('","prism:', $dates[1]);
	    		}
	    		foreach ($pre_date_scopus as $type) {
	    			$pre_type_scopus[] = explode('subtypeDescription":"', $type[1]);
	    		}
	    		foreach ($pre_type_scopus as $type_docs) {
	    			$type_doc_scopus[] = explode('","', $type_docs[1]);
	    		}
	    		$number_eids = count($eid_doc_scopus);
	    		for ($i=0; $i < $number_eids; $i++) {
	    			if ($type_doc_scopus[$i][0] == 'Article' || $type_doc_scopus[$i][0] == 'Review'){
	    				//|| $type_doc_scopus[$i][0] == 'Article in Press') {
			    		$pre_journal = explode('prism:publicationName":"', $title_doc_scopus[$i][1]);
			    		$journal_name = explode('","', $pre_journal[1]);
			    		$pre_issn = explode('prism:issn":"', $pre_journal[1]);
			    		if (isset($pre_issn[1])) {
			    			$issn = explode('","', $pre_issn[1]);
			    		} else {
			    			$issn = array('');
			    		}
			    		$pre_isbn = explode('prism:isbn":"', $pre_journal[1]);
			    		if (isset($pre_isbn[1])) {
			    			$isbn = explode('","', $pre_isbn[1]);
			    		} else {
			    			$isbn = array('');
			    		}
			    		$pre_volume = explode('prism:volume":"', $pre_journal[1]);
			    		if (isset($pre_volume[1])) {
			    			$volume = explode('","', $pre_volume[1]);
			    		} else {
			    			$volume = array('');
			    		}
			    		$pre_issue = explode('prism:issueIdentifier":"', $pre_journal[1]);
			    		if (isset($pre_issue[1])) {
			    			$issue = explode('","', $pre_issue[1]);
			    		} else {
			    			$issue = array('');
			    		}
			    		$pre_pages = explode('prism:pageRange":"', $pre_journal[1]);
			    		if (isset($pre_pages[1])) {
			    			$pages = explode('","', $pre_pages[1]);
			    			$per_pages = explode('-', $pages[0]);
			    		} else {
			    			$per_pages = array('','');
			    		}
			    		$pre_doi = explode('prism:doi":"', $pre_journal[1]);
			    		if (isset($pre_doi[1])) {
			    			$doi = explode('","', $pre_doi[1]);
			    		} else {
			    			$doi = array('');
			    		}
			    		$start_page = (int)$per_pages[0];
			    		if (isset($per_pages[1])) {
			    			$final_page = (int)$per_pages[1];
			    		} else {
			    			$final_page = NULL;
			    		}


	    				$search_art = db_select('reposi_article_book', 'ab');
					    $search_art->fields('ab')
					          ->condition('ab.ab_type', 'Article', '=')
					          ->condition('ab.ab_title', $title_doc_scopus[$i][0], '=');
					    $find_art = $search_art->execute();
					    $art_id = $find_art->fetchField();
              $find_art -> allowRowCount = TRUE;
					    $find_something = $find_art->rowCount();
					    if ($find_something == '0') {
					    	db_insert('reposi_article_book')->fields(array(
						        'ab_type'              => 'Article',
						        'ab_title'             => $title_doc_scopus[$i][0],
						        'ab_journal_editorial' => $journal_name[0],
						    ))->execute();
						    $search_arti = db_select('reposi_article_book', 'ab');
						    $search_arti->fields('ab')
						          ->condition('ab.ab_type', 'Article', '=')
						          ->condition('ab.ab_title', $title_doc_scopus[$i][0], '=');
						    $art_id2 = $search_arti->execute()->fetchField();
						    $fields_date = explode('-', $date_scopus[$i][0]);
						    db_insert('reposi_date')->fields(array(
						        'd_day'  => $fields_date[2],
						        'd_month'=> $fields_date[1],
						        'd_year' => $fields_date[0],
						        'd_abid' => $art_id2,
						    ))->execute();
						    db_insert('reposi_publication')->fields(array(
						        'p_type'       => 'Article',
						        'p_title'      => $title_doc_scopus[$i][0],
						        'p_year'       => $fields_date[0],
						        'p_check'      => 0,
						        'p_eid_scopus' => $eid_doc_scopus[$i][0],
						        'p_abid'       => $art_id2,
						    ))->execute();
						    if (!empty($issn[0]) || !empty($isbn[0]) || !empty($volume[0]) || !empty($issue[0]) ||
						    	!empty($per_pages[0]) || !empty($doi[0])) {
						    	db_insert('reposi_article_book_detail')->fields(array(
							        'abd_volume'     => $volume[0],
							        'abd_issue'      => $issue[0],
							        'abd_start_page' => $start_page,
							        'abd_final_page' => $final_page,
							        'abd_issn'       => $issn[0],
							        'abd_isbn'       => $isbn[0],
							        'abd_doi'        => $doi[0],
							        'abd_abid'       => $art_id2,
							    ))->execute();
						    }
					    } else {
					    	$search_arti = db_select('reposi_article_book', 'ab');
						    $search_arti->fields('ab')
						          ->condition('ab.ab_type', 'Article', '=')
						          ->condition('ab.ab_title', $title_doc_scopus[$i][0], '=');
						    $art_id3 = $search_arti->execute()->fetchField();
						    if (!empty($issn[0]) || !empty($isbn[0]) || !empty($volume[0]) || !empty($issue[0]) ||
						    	!empty($per_pages[0]) || !empty($doi[0])) {
						    	$search_artic = db_select('reposi_article_book_detail', 'abd');
							    $search_artic->fields('abd')
							          ->condition('abd.abd_abid', $art_id3, '=');
							    $art_det_id = $search_artic->execute()->fetchField();
						    	if (empty($art_det_id)) {
						    		db_insert('reposi_article_book_detail')->fields(array(
								        'abd_volume'     => $volume[0],
								        'abd_issue'      => $issue[0],
								        'abd_start_page' => $start_page,
								        'abd_final_page' => $final_page,
								        'abd_issn'       => $issn[0],
								        'abd_isbn'       => $isbn[0],
								        'abd_doi'        => $doi[0],
								        'abd_abid'       => $art_id3,
								    ))->execute();
						    	} else {
						    		db_update('reposi_article_book_detail')->fields(array(
								        'abd_volume'     => $volume[0],
								        'abd_issue'      => $issue[0],
								        'abd_start_page' => $start_page,
								        'abd_final_page' => $final_page,
								        'abd_issn'       => $issn[0],
								        'abd_isbn'       => $isbn[0],
								        'abd_doi'        => $doi[0],
								    ))->condition('abd_abid', $art_id3)
							    	->execute();
						    	}
						    }
					    }
					    $num_articles++;
	    			}
	    			elseif ($type_doc_scopus[$i][0] == 'Book') {
	    			 	//dpm('Libro**********: ' . $title_doc_scopus[$i][1]);
	    			 	//dpm($date_scopus[$i][0]);
	    			 	//dpm($title_doc_scopus[$i][0]);
	    			 	//dpm($eid_doc_scopus[$i][0]);
	    			 	$pre_name = explode('prism:publicationName":"', $title_doc_scopus[$i][1]);
			    		$book_name = explode('","', $pre_name[1]);
			    		//dpm($book_name[0]);

			    		$pre_isbn_book = explode('prism:isbn":"', $pre_name[1]);
			    		if (isset($pre_isbn_book[1])) {
			    			$isbn_book = explode('","', $pre_isbn_book[1]);
			    		} else {
			    			$isbn_book = array('');
			    		}
			    		//dpm('ISBN: ' . $isbn_book[0]);
			    		$pre_volume_book = explode('prism:volume":"', $pre_name[1]);
			    		if (isset($pre_volume_book[1])) {
			    			$volume_book = explode('","', $pre_volume_book[1]);
			    		} else {
			    			$volume_book = array('');
			    		}
			    		//dpm('Vol: ' . $volume_book[0]);
			    		$pre_pages_book = explode('prism:pageRange":"', $pre_name[1]);
			    		if (isset($pre_pages_book[1])) {
			    			$pages_book = explode('","', $pre_pages_book[1]);
			    			$per_pages_book = explode('-', $pages_book[0]);
			    		} else {
			    			$per_pages_book = array('','');
			    		}
			    		//dpm('Pages: ' . $per_pages_book[0]);
			    		$start_page_book = (int)$per_pages_book[0];
			    		//dpm('SPag: ' . $start_page_book);
			    		if (isset($per_pages_book[1])) {
			    			$final_page_book = (int)$per_pages_book[1];
			    		} else {
			    			$final_page_book = NULL;
			    		}
			    		//dpm('FPag : ' . $final_page_book);





			    		$search_book = db_select('reposi_article_book', 'ab');
					    $search_book->fields('ab')
					          ->condition('ab.ab_type', 'Book', '=')
					          ->condition('ab.ab_title', $title_doc_scopus[$i][0], '=');
					    $find_book = $search_book->execute();
					    $book_id = $find_book->fetchField();
              $find_book -> allowRowCount = TRUE;
					    $find_something = $find_book->rowCount();
					    if ($find_something == '0') {
					    	db_insert('reposi_article_book')->fields(array(
						        'ab_type'              => 'Book',
						        'ab_title'             => $title_doc_scopus[$i][0],
						    ))->execute();
						    $search_book2 = db_select('reposi_article_book', 'ab');
						    $search_book2->fields('ab')
						          ->condition('ab.ab_type', 'Book', '=')
						          ->condition('ab.ab_title', $title_doc_scopus[$i][0], '=');
						    $book_id2 = $search_book2->execute()->fetchField();
						    $fields_date_book = explode('-', $date_scopus[$i][0]);
						    db_insert('reposi_date')->fields(array(
						        'd_day'  => $fields_date_book[2],
						        'd_month'=> $fields_date_book[1],
						        'd_year' => $fields_date_book[0],
						        'd_abid' => $book_id2,
						    ))->execute();
						    db_insert('reposi_publication')->fields(array(
						        'p_type'       => 'Book',
						        'p_title'      => $title_doc_scopus[$i][0],
						        'p_year'       => $fields_date_book[0],
						        'p_check'      => 0,
						        'p_eid_scopus' => $eid_doc_scopus[$i][0],
						        'p_abid'       => $book_id2,
						    ))->execute();
						    if (!empty($isbn_book[0]) || !empty($volume_book[0]) ||
						    	!empty($per_pages_book[0])) {
						    	db_insert('reposi_article_book_detail')->fields(array(
							        'abd_volume'     => $volume_book[0],
							        'abd_start_page' => $start_page_book,
							        'abd_final_page' => $final_page_book,
							        'abd_isbn'       => $isbn_book[0],
							        'abd_abid'       => $book_id2,
							    ))->execute();
						    }
					    } else {
					    	$search_book3 = db_select('reposi_article_book', 'ab');
						    $search_book3->fields('ab')
						          ->condition('ab.ab_type', 'Book', '=')
						          ->condition('ab.ab_title', $title_doc_scopus[$i][0], '=');
						    $book_id3 = $search_book3->execute()->fetchField();
						    if (!empty($isbn_book[0]) || !empty($volume_book[0]) ||
						    	!empty($per_pages_book[0])) {
						    	$search_book_det = db_select('reposi_article_book_detail', 'abd');
							    $search_book_det->fields('abd')
							          ->condition('abd.abd_abid', $book_id3, '=');
							    $book_det_id = $search_book_det->execute()->fetchField();
						    	if (empty($book_det_id)) {
						    		db_insert('reposi_article_book_detail')->fields(array(
									    'abd_volume'     => $volume_book[0],
								        'abd_start_page' => $start_page_book,
								        'abd_final_page' => $final_page_book,
								        'abd_isbn'       => $isbn_book[0],
								        'abd_abid'       => $book_id3,
								    ))->execute();
						    	} else {
						    		db_update('reposi_article_book_detail')->fields(array(
								        'abd_volume'     => $volume_book[0],
								        'abd_start_page' => $start_page_book,
								        'abd_final_page' => $final_page_book,
								        'abd_isbn'       => $isbn_book[0],
								    ))->condition('abd_abid', $book_id3)
							    	->execute();
						    	}
						    }
					    }





			    		$num_books++;
	    			}
	    			elseif ($type_doc_scopus[$i][0] == 'Chapter') {
	    			 	//dpm('Chap**********: ' . $title_doc_scopus[$i][1]);
	    			 	//dpm($date_scopus[$i][0]);
	    			 	//dpm($title_doc_scopus[$i][0]); //Nombre del capítulo
	    			 	//dpm($eid_doc_scopus[$i][0]);
	    			 	$pre_book_name = explode('prism:publicationName":"', $title_doc_scopus[$i][1]);
			    		$book_chap_name = explode('","', $pre_book_name[1]);
			    		//dpm($book_chap_name[0]); //Nombre del libro

			    		$pre_isbn_chap = explode('prism:isbn":"', $pre_book_name[1]);
			    		if (isset($pre_isbn_chap[1])) {
			    			$isbn_chap = explode('","', $pre_isbn_chap[1]);
			    		} else {
			    			$isbn_chap = array('');
			    		}
			    		//dpm('ISBN: ' . $isbn_chap[0]);
			    		$pre_volume_chap = explode('prism:volume":"', $pre_book_name[1]);
			    		if (isset($pre_volume_chap[1])) {
			    			$volume_chap = explode('","', $pre_volume_chap[1]);
			    		} else {
			    			$volume_chap = array('');
			    		}
			    		//dpm('Vol: ' . $volume_chap[0]);
			    		$pre_pages_chap = explode('prism:pageRange":"', $pre_book_name[1]);
			    		if (isset($pre_pages_chap[1])) {
			    			$pages_chap = explode('","', $pre_pages_chap[1]);
			    			$per_pages_chap = explode('-', $pages_chap[0]);
			    		} else {
			    			$per_pages_chap = array('','');
			    		}
			    		//dpm('Pages: ' . $per_pages_chap[0]);
			    		$start_page_chap = (int)$per_pages_chap[0];
			    		//dpm('SPag: ' . $start_page_chap);
			    		if (isset($per_pages_chap[1])) {
			    			$final_page_chap = (int)$per_pages_chap[1];
			    		} else {
			    			$final_page_chap = NULL;
			    		}
			    		//dpm('FPAg: ' . $final_page_chap);
			    		$pre_doi_chap = explode('prism:doi":"', $pre_book_name[1]);
			    		if (isset($pre_doi_chap[1])) {
			    			$doi_chap = explode('","', $pre_doi_chap[1]);
			    		} else {
			    			$doi_chap = array('');
			    		}
			    		//dpm($doi_chap[0]);





			    		$search_chap = db_select('reposi_article_book', 'ab');
					    $search_chap->fields('ab')
					          ->condition('ab.ab_type', 'Book Chapter', '=')
					          ->condition('ab.ab_title', $book_chap_name[0], '=')
          					  ->condition('ab.ab_subtitle_chapter', $title_doc_scopus[$i][0], '=');
					    $find_chap = $search_chap->execute();
					    $chap_id = $find_chap->fetchField();
              				    $find_chap -> allowRowCount = TRUE;
					    $find_something = $find_chap->rowCount();
					    if ($find_something == '0') {
					    	db_insert('reposi_article_book')->fields(array(
						        'ab_type'              => 'Book Chapter',
						        'ab_title'             => $book_chap_name[0],
          						'ab_subtitle_chapter'  => $title_doc_scopus[$i][0],
						    ))->execute();
						    $search_chap2 = db_select('reposi_article_book', 'ab');
						    $search_chap2->fields('ab')
						          ->condition('ab.ab_type', 'Book Chapter', '=')
						          ->condition('ab.ab_title', $book_chap_name[0], '=')
          					  	  ->condition('ab.ab_subtitle_chapter', $title_doc_scopus[$i][0], '=');
						    $chap_id2 = $search_chap2->execute()->fetchField();
						    $fields_date_chap = explode('-', $date_scopus[$i][0]);
						    db_insert('reposi_date')->fields(array(
						        'd_day'  => $fields_date_chap[2],
						        'd_month'=> $fields_date_chap[1],
						        'd_year' => $fields_date_chap[0],
						        'd_abid' => $chap_id2,
						    ))->execute();
						    db_insert('reposi_publication')->fields(array(
						        'p_type'       => 'Book Chapter',
						        'p_title'      => $title_doc_scopus[$i][0],
						        'p_year'       => $fields_date_chap[0],
						        'p_check'      => 0,
						        'p_eid_scopus' => $eid_doc_scopus[$i][0],
						        'p_abid'       => $chap_id2,
						    ))->execute();
						    if (!empty($isbn_chap[0]) || !empty($volume_chap[0]) ||
						    	!empty($per_pages_chap[0]) || !empty($doi_chap[0])) {
						    	db_insert('reposi_article_book_detail')->fields(array(
							        'abd_volume'     => $volume_chap[0],
							        'abd_start_page' => $start_page_chap,
							        'abd_final_page' => $final_page_chap,
							        'abd_isbn'       => $isbn_chap[0],
							        'abd_doi'        => $doi_chap[0],
							        'abd_abid'       => $chap_id2,
							    ))->execute();
						    }
					    } else {
					    	$search_chap3 = db_select('reposi_article_book', 'ab');
						    $search_chap3->fields('ab')
						          ->condition('ab.ab_type', 'Book Chapter', '=')
						          ->condition('ab.ab_title', $book_chap_name[0], '=')
          					  	  ->condition('ab.ab_subtitle_chapter', $title_doc_scopus[$i][0], '=');
						    $chap_id3 = $search_chap3->execute()->fetchField();
						    if (!empty($isbn_chap[0]) || !empty($volume_chap[0]) ||
						    	!empty($per_pages_chap[0]) || !empty($doi_chap[0])) {
						    	$search_chap_det = db_select('reposi_article_book_detail', 'abd');
							    $search_chap_det->fields('abd')
							          ->condition('abd.abd_abid', $chap_id3, '=');
							    $chap_det_id = $search_chap_det->execute()->fetchField();
						    	if (empty($chap_det_id)) {
						    		db_insert('reposi_article_book_detail')->fields(array(
									    'abd_volume'     => $volume_chap[0],
								        'abd_start_page' => $start_page_chap,
								        'abd_final_page' => $final_page_chap,
								        'abd_isbn'       => $isbn_chap[0],
								        'abd_doi'        => $doi_chap[0],
								        'abd_abid'       => $chap_id3,
								    ))->execute();
						    	} else {
						    		db_update('reposi_article_book_detail')->fields(array(
								        'abd_volume'     => $volume_chap[0],
								        'abd_start_page' => $start_page_chap,
								        'abd_final_page' => $final_page_chap,
								        'abd_isbn'       => $isbn_chap[0],
								        'abd_doi'        => $doi_chap[0],
								    ))->condition('abd_abid', $chap_id3)
							    	->execute();
						    	}
						    }
					    }






			    		$num_book_chaps++;
	    			}
	    		}
	    	}
	    }
		$eid_doc = array();
		$eids_doc = array();
		foreach ($eid_doc_scopus as $eid) {
			$search_eid_doc = db_select('reposi_publication', 'p');
		    $search_eid_doc->fields('p', array('p_eid_scopus'))
		             ->condition('p.p_eid_scopus', $eid[0], '=');
		    $eids_doc[] = $search_eid_doc->execute()->fetchField();
		}
		$eid_doc = array_filter($eids_doc);
		$simplify_docs = array_unique($eid_doc);
		foreach ($simplify_docs as $docs) {
			$url_scopus_abstract = 'https://api.elsevier.com/content/search/scopus?query=eid(' .
			$docs .')&field=dc:description&apikey=' . $apikey_scopus;
			$search_abstract = file_get_contents($url_scopus_abstract);
			$pre_abstract = explode('dc:description":"', $search_abstract);
			if (isset($pre_abstract[1])) {
				$abstract = explode('"}]}}', $pre_abstract[1]);
			} else {
				$abstract = array('');
			}
			$url_scopus_author = 'https://api.elsevier.com/content/search/scopus?query=eid(' .
			$docs . ')&field=author&start=' . $apikey_query_start . '&count=' .
			$apikey_query_final . '&apikey=' . $apikey_scopus;
			$get_other_authors = file_get_contents($url_scopus_author);
			$search_pid = db_select('reposi_publication', 'p');
			$search_pid->fields('p', array('p_abid', 'p_eid_scopus'))
		               ->condition('p.p_eid_scopus', $docs, '=');
		    $get_p_abid = $search_pid->execute()->fetchField();
			$search_abs_doc = db_select('reposi_article_book', 'ab');
			$search_abs_doc->fields('ab', array('ab_abstract', 'abid'))
						   ->condition('ab.abid', $get_p_abid, '=');
			$find_abs = $search_abs_doc->execute()->fetchField();
			if (empty($find_abs)) {
				db_update('reposi_article_book')->fields(array(
			      'ab_abstract' => $abstract[0],
			    ))->condition('abid', $get_p_abid)
			    ->execute();
			}
			$search_aut = explode('"@seq": "', $get_other_authors);
			$simplify_auts = array_unique($search_aut);
			$find_seq_aut = array();
			foreach ($simplify_auts as $seq_aut) {
				$find_seq_aut[] = explode('", "author-url', $seq_aut);
			}
			$flag_aut = -1;
			$info_auth = array();
			foreach ($find_seq_aut as $get_aut) {
				$flag_aut++;
				if (($flag_aut == $get_aut[0]) && isset($get_aut[1])) {
					$search_aut_id = explode('authid":"', $get_aut[1]);
					$get_aut_id = explode('","authname', $search_aut_id[1]);
					$surname_aut = explode('surname":"', $get_aut[1]);
					$get_surname = explode('","given-name":"', $surname_aut[1]);
					$get_name = explode('","initials', $get_surname[1]);
					$info_auth[] = $get_aut_id[0] . ', ' . $get_surname[0] . ' ' . $get_name[0];
					$serch_a = db_select('reposi_author', 'a');
			        $serch_a->fields('a')
			              ->condition('a.a_id_scopus', $get_aut_id[0], '=');
			        $serch_aut = $serch_a->execute()->fetchField();
			        if (empty($serch_aut)) {
				        db_insert('reposi_author')->fields(array(
				        	'a_id_scopus'       => $get_aut_id[0],
				        	'a_first_name'      => $get_name[0],
	                        'a_second_name'     => '',
	                        'a_first_lastname'  => $get_surname[0],
	                        'a_second_lastname' => '',
	                    ))->execute();
				        $serch2_a = db_select('reposi_author', 'a');
				        $serch2_a ->fields('a')
				                  ->condition('a.a_id_scopus', $get_aut_id[0], '=');
				        $serch2_aut = $serch2_a->execute()->fetchField();
				        $aut_publi_id = (int)$serch2_aut;
				        db_insert('reposi_publication_author')->fields(array(
				          'ap_author_id' => $aut_publi_id,
				          'ap_abid'      => $get_p_abid,
				        ))->execute();
			        } else {
				        $aut_publi_id2 = (int)$serch_aut;
				        $search_relation = db_select('reposi_publication_author', 'pa');
						$search_relation->fields('pa')
					               		->condition('pa.ap_author_id', $aut_publi_id2, '=')
					               		->condition('pa.ap_abid', $get_p_abid, '=');
					    $relation_pa = $search_relation->execute()->fetchField();
					    if (empty($relation_pa)) {
					    	db_insert('reposi_publication_author')->fields(array(
					            'ap_author_id' => $aut_publi_id2,
					            'ap_abid'      => $get_p_abid,
					        ))->execute();
					    }
			        }
				}
			}
		}
		$info_show = $num_articles . t(' Articles were found with
	    			the ID Author on Scopus.') . '<br>' .
					$num_books . t(' Books were found with
	    			the ID Author on Scopus.') . '<br>' .
					$num_book_chaps . t(' Book Chapters were found with
	    			the ID Author on Scopus.');
              $form['pager']=['#type' => 'pager'];
	    $form['doc'] = array(
	      '#title' => t('Documents'),
	      '#type' => 'details',
	      '#open' => TRUE,
	    );
	    $form['doc']['body'] = array('#markup' => $info_show);*/
		return $form;
	
